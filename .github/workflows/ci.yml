name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  MIX_ENV: test

permissions:
  contents: read

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ['1.17.3']
        otp: ['26.2.5']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
        
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
        
    - name: Install dependencies
      run: mix deps.get
      
    - name: Check code formatting
      run: mix format --check-formatted
      
    - name: Run Credo
      run: mix credo --strict
      
    - name: Compile code (check for warnings)
      run: mix compile --warnings-as-errors

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ['1.17.3']
        otp: ['26.2.5']
        
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: the_maestro_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}
        
    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
        
    - name: Install dependencies
      run: mix deps.get
      
    - name: Set up database
      run: mix ecto.create && mix ecto.migrate
      
    - name: Run tests
      run: mix test